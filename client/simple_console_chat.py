#!/usr/bin/env python3

import sys
import threading
import time
import os
from datetime import datetime
from generated import messenger_pb2
from generated import messenger_pb2_grpc
import grpc


class SimpleConsoleChat:
    def __init__(self, server_address='localhost:8080'):
        self.server_address = server_address
        self.channel = None
        self.stub = None
        self.nickname = None
        self.messages = []  # –û–±—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.room_messages = {}  # –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–æ–º–Ω–∞—Ç–∞–º {chat_id: [messages]}
        self.running = False
        self.last_message_time = time.time()
        self.current_chat_id = None  # –¢–µ–∫—É—â–∏–π —á–∞—Ç ID
        self.user_chats = {}  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id: ChatStats}
        self.chat_names = {}  # –ù–∞–∑–≤–∞–Ω–∏—è —á–∞—Ç–æ–≤ {chat_id: name}
        self.notifications = []  # –°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        self.last_notification_check = time.time()  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        self.user_colors = {}  # –¶–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {nickname: color_code}
        self.available_colors = [31, 32, 33, 34, 35, 36, 91, 92, 93, 94, 95, 96]  # –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞ ANSI
        
    def connect(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É"""
        try:
            self.channel = grpc.insecure_channel(self.server_address)
            self.stub = messenger_pb2_grpc.MessengerStub(self.channel)
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É {self.server_address}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return False
    
    def disconnect(self):
        """–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"""
        if self.channel:
            self.channel.close()
            print("üîå –û—Ç–∫–ª—é—á–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
    
    def send_message(self, message, chat_id=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        if chat_id is None:
            chat_id = self.current_chat_id
            
        if not chat_id:
            self.add_notification("‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω —á–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /join <chat_id>")
            return None
            
        try:
            request = messenger_pb2.SendMessageRequest(
                message=message,
                chat_id=chat_id,
                nickname=self.nickname
            )
            
            response = self.stub.SendMessage(request)
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
            chat_name = self.chat_names.get(chat_id, chat_id)
            self.add_room_message(f"üì§ [{self.nickname}]: {message}", "sent", chat_id, self.nickname)
            return response.message_id
        except grpc.RpcError as e:
            self.add_notification(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            return None
    
    def get_user_chats(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
        try:
            request = messenger_pb2.GetUserChatsRequest(nickname=self.nickname)
            response = self.stub.GetUserChats(request)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
            chats_with_new_messages = []
            total_new_messages = 0
            
            for chat_stats in response.chats:
                old_stats = self.user_chats.get(chat_stats.chat_id)
                self.user_chats[chat_stats.chat_id] = chat_stats
                
                if chat_stats.new_messages > 0:
                    total_new_messages += chat_stats.new_messages
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
                    if not old_stats or old_stats.new_messages != chat_stats.new_messages:
                        chats_with_new_messages.append(chat_stats)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
            if chats_with_new_messages:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é (–Ω–µ –≤ —á–∞—Ç–µ), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —á–∞—Ç–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö —á–∞—Ç–æ–≤
                if self.current_chat_id is None:
                    # –í –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                    filtered_chats = chats_with_new_messages
                else:
                    # –í —á–∞—Ç–µ - –∏—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Ç
                    filtered_chats = [chat for chat in chats_with_new_messages if chat.chat_id != self.current_chat_id]
                
                if filtered_chats:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ
                    header_text = "üì® –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–∞—Ö:" if self.current_chat_id is None else "üì® –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Ç–∞—Ö:"
                    has_header = any(header_text in notification for notification in self.notifications)
                    
                    if not has_header:
                        self.add_notification_to_list(header_text)
                    
                    for chat_stats in filtered_chats:
                        chat_name = self.chat_names.get(chat_stats.chat_id, chat_stats.chat_id)
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º —á–∞—Ç–µ
                        chat_notification = f"   ‚Ä¢ {chat_name}: {chat_stats.new_messages} –Ω–æ–≤—ã—Ö"
                        has_chat_notification = any(chat_notification in notification for notification in self.notifications)
                        
                        if not has_chat_notification:
                            self.add_notification_to_list(chat_notification)
            
            return response.chats
        except grpc.RpcError as e:
            self.add_notification_to_list(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Ç–æ–≤: {e}")
            return []
    
    def get_chat_messages(self, chat_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞"""
        try:
            request = messenger_pb2.GetMessagesRequest(chat_id=chat_id)
            response = self.stub.GetMessages(request)
            
            # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ
            for msg in response.messages:
                self.get_user_color(msg.nickname)
            
            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ
            self.room_messages[chat_id] = []
            for msg in response.messages:
                self.add_room_message(f"üì• [{msg.nickname}]: {msg.content}", "received", chat_id, msg.nickname)
            
            return response.messages
        except grpc.RpcError as e:
            self.add_notification(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞: {e}")
            return []
    
    def set_messages_read(self, chat_id):
        """–û—Ç–º–µ—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ"""
        try:
            request = messenger_pb2.SetMessagesReadRequest(
                chat_id=chat_id,
                nickname=self.nickname
            )
            response = self.stub.SetMessagesRead(request)
            
            if response.success:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É - —É–±–∏—Ä–∞–µ–º –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                if chat_id in self.user_chats:
                    self.user_chats[chat_id].new_messages = 0
            return response.success
        except grpc.RpcError as e:
            self.add_notification(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {e}")
            return False
    
    def create_chat(self, chat_name):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç"""
        try:
            request = messenger_pb2.CreateChatRequest(
                name=chat_name,
                nickname=self.nickname
            )
            response = self.stub.CreateChat(request)
            
            if response.chat_id:
                self.chat_names[response.chat_id] = chat_name
                self.add_notification(f"‚úÖ –°–æ–∑–¥–∞–Ω —á–∞—Ç '{chat_name}' —Å ID: {response.chat_id}")
                return response.chat_id
            else:
                self.add_notification(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª chat_id")
                return None
        except grpc.RpcError as e:
            self.add_notification(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞: {e}")
            return None
        except Exception as e:
            self.add_notification(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞: {e}")
            return None
    
    def join_chat(self, chat_id):
        """–í—Å—Ç—É–ø–∏—Ç—å –≤ —á–∞—Ç"""
        try:
            request = messenger_pb2.JoinChatRequest(
                chat_id=chat_id,
                nickname=self.nickname
            )
            response = self.stub.JoinChat(request)
            
            if response.success:
                self.add_notification(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —á–∞—Ç {chat_id}")
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
                self.get_user_chats()
                return True
            else:
                self.add_notification(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ —á–∞—Ç {chat_id}")
                return False
        except grpc.RpcError as e:
            self.add_notification(f"‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —á–∞—Ç: {e}")
            return False
    
    def leave_chat(self, chat_id):
        """–ü–æ–∫–∏–Ω—É—Ç—å —á–∞—Ç"""
        try:
            request = messenger_pb2.LeaveChatRequest(
                chat_id=chat_id,
                nickname=self.nickname
            )
            response = self.stub.LeaveChat(request)
            
            if response.success:
                self.add_notification(f"‚úÖ –ü–æ–∫–∏–Ω—É–ª–∏ —á–∞—Ç {chat_id}")
                # –£–¥–∞–ª—è–µ–º –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞
                if chat_id in self.user_chats:
                    del self.user_chats[chat_id]
                if chat_id in self.room_messages:
                    del self.room_messages[chat_id]
                if chat_id in self.chat_names:
                    del self.chat_names[chat_id]
                return True
            else:
                self.add_notification(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∏–Ω—É—Ç—å —á–∞—Ç {chat_id}")
                return False
        except grpc.RpcError as e:
            self.add_notification(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —á–∞—Ç–∞: {e}")
            return False
    
    def add_message(self, message, msg_type="info"):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–±—â—É—é –∏—Å—Ç–æ—Ä–∏—é"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        formatted_message = f"[{timestamp}] {message}"
        self.messages.append((formatted_message, msg_type))
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
        if len(self.messages) > 100:
            self.messages = self.messages[-50:]
    
    def add_room_message(self, message, msg_type="info", chat_id=None, nickname=None):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç"""
        if chat_id is None:
            chat_id = self.current_chat_id
            
        if chat_id not in self.room_messages:
            self.room_messages[chat_id] = []
            
        timestamp = datetime.now().strftime("%H:%M:%S")
        formatted_message = f"[{timestamp}] {message}"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —Ç–∏–ø–µ
        self.room_messages[chat_id].append((formatted_message, msg_type, nickname))
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
        if len(self.room_messages[chat_id]) > 100:
            self.room_messages[chat_id] = self.room_messages[chat_id][-50:]
            
        # –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∏–π —á–∞—Ç, —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if chat_id == self.current_chat_id:
            self.add_message(message, msg_type)
    
    def switch_chat(self, chat_id):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–æ–π —á–∞—Ç"""
        # –û—Ç–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ —á–∞—Ç
        self.set_messages_read(chat_id)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
        self.get_chat_messages(chat_id)
        
        self.current_chat_id = chat_id
        chat_name = self.chat_names.get(chat_id, chat_id)
        self.add_notification(f"‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –≤ —á–∞—Ç: {chat_name} ({chat_id})")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —ç—Ç–æ–º —á–∞—Ç–µ
        self.clear_chat_notifications(chat_id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π —ç—Ç–æ–≥–æ —á–∞—Ç–∞
        if chat_id in self.room_messages and self.room_messages[chat_id]:
            self.add_notification(f"üìú –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ '{chat_name}': {len(self.room_messages[chat_id])} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        return True
    
    def get_chat_history(self, chat_id=None):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞"""
        if chat_id is None:
            chat_id = self.current_chat_id
            
        if chat_id not in self.room_messages:
            return []
        return self.room_messages[chat_id]
    
    def add_notification(self, notification):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        formatted_notification = f"üîî [{timestamp}] {notification}"
        print(f"\n{formatted_notification}")
    
    def add_notification_to_list(self, notification):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        formatted_notification = f"üîî [{timestamp}] {notification}"
        self.notifications.append(formatted_notification)
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        if len(self.notifications) > 10:
            self.notifications = self.notifications[-5:]
    
    def get_user_color(self, nickname):
        """–ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if nickname not in self.user_colors:
            # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ü–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–µ—à–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            import hashlib
            hash_value = int(hashlib.md5(nickname.encode()).hexdigest(), 16)
            color_index = hash_value % len(self.available_colors)
            self.user_colors[nickname] = self.available_colors[color_index]
        return self.user_colors[nickname]
    
    def clear_chat_notifications(self, chat_id):
        """–£–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —á–∞—Ç–µ"""
        chat_name = self.chat_names.get(chat_id, chat_id)
        
        # –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤ —ç—Ç–æ–º —á–∞—Ç–µ
        self.notifications = [
            notification for notification in self.notifications 
            if not (
                ("–Ω–æ–≤—ã—Ö" in notification and chat_name in notification) or
                ("–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è" in notification and chat_name in notification)
            )
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —á–∞—Ç–∞—Ö —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        has_chat_notifications = any("–Ω–æ–≤—ã—Ö" in notification and "‚Ä¢" in notification for notification in self.notifications)
        
        # –ï—Å–ª–∏ –Ω–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —á–∞—Ç–∞—Ö, —É–¥–∞–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        if not has_chat_notifications:
            self.notifications = [
                notification for notification in self.notifications 
                if "–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–∞—Ö" not in notification and "–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Ç–∞—Ö" not in notification
            ]
    
    def clear_screen(self):
        """–û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞"""
        os.system('clear' if os.name == 'posix' else 'cls')
    
    def display_messages(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        self.clear_screen()
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        print("=" * 80)
        if self.current_chat_id:
            chat_name = self.chat_names.get(self.current_chat_id, self.current_chat_id)
            print(f"üì® –ö–û–ù–°–û–õ–¨–ù–´–ô –ß–ê–¢ - –ß–∞—Ç: \033[93m{chat_name}\033[0m ({self.current_chat_id})")
        else:
            print("üè† –ö–û–ù–°–û–õ–¨–ù–´–ô –ß–ê–¢ - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        print("=" * 80)
        
        # –û–±–ª–∞—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        if self.notifications:
            print("\nüîî –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø:")
            for notification in self.notifications[-5:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                print(f"\033[96m{notification}\033[0m")  # –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            print("-" * 80)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –∏–ª–∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if self.current_chat_id:
            chat_messages = self.get_chat_history(self.current_chat_id)
            
            if not chat_messages:
                print("\nüì≠ –í —ç—Ç–æ–º —á–∞—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
            else:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 15 —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ (–º–µ–Ω—å—à–µ –∏–∑-–∑–∞ –æ–±–ª–∞—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
                recent_messages = chat_messages[-15:]
                for message_data in recent_messages:
                    if len(message_data) >= 3:
                        message, msg_type, nickname = message_data
                    else:
                        message, msg_type = message_data
                        nickname = None
                    
                    if msg_type == "received" and nickname:
                        # –¶–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                        user_color = self.get_user_color(nickname)
                        print(f"\033[{user_color}m{message}\033[0m")
                    elif msg_type == "sent" and nickname:
                        # –¶–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ–º–Ω–æ–≥–æ —Ç—É—Å–∫–ª–µ–µ)
                        user_color = self.get_user_color(nickname)
                        print(f"\033[{user_color};2m{message}\033[0m")  # –¢—É—Å–∫–ª—ã–π —Ü–≤–µ—Ç
                    elif msg_type == "error":
                        print(f"\033[91m{message}\033[0m")  # –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—à–∏–±–æ–∫
                    else:
                        print(message)  # –û–±—ã—á–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö
        else:
            # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            print("\nüè† –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ!")
            print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
            print("‚Ä¢ /create <–Ω–∞–∑–≤–∞–Ω–∏–µ> - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç")
            print("‚Ä¢ /join <chat_id>    - –ø–µ—Ä–µ–π—Ç–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç")
            print("‚Ä¢ /chats             - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ —á–∞—Ç—ã")
            print("‚Ä¢ /help              - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
            print("‚Ä¢ /status            - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            print("\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
        
        print("\n" + "=" * 80)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–∞—Ö
        if self.user_chats:
            if self.current_chat_id:
                print(f"üè† –í–∞—à–∏ —á–∞—Ç—ã:")
            else:
                print(f"üìã –í–ê–®–ò –ß–ê–¢–´:")
            for chat_id, chat_stats in self.user_chats.items():
                chat_name = self.chat_names.get(chat_id, chat_id)
                new_msgs = chat_stats.new_messages
                current = " ‚Üê —Ç–µ–∫—É—â–∏–π" if chat_id == self.current_chat_id else ""
                new_indicator = f" ({new_msgs} –Ω–æ–≤—ã—Ö)" if new_msgs > 0 else ""
                print(f"   ‚Ä¢ {chat_name} ({chat_id}){new_indicator}{current}")
        else:
            if self.current_chat_id:
                print("üè† –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–∞—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /create –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞")
            else:
                print("üìã –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–∞—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /create –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞")
        
        print("=" * 80)
    
    def show_help(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        print("\n" + "="*80)
        print("üìã –ö–û–ú–ê–ù–î–´ –ß–ê–¢–ê:")
        print("="*80)
        print("üè† –ö–û–ú–ê–ù–î–´ –ß–ê–¢–û–í:")
        print("/join <chat_id>     - –ø–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç")
        print("/create <–Ω–∞–∑–≤–∞–Ω–∏–µ>  - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç")
        print("/leave <chat_id>    - –ø–æ–∫–∏–Ω—É—Ç—å —á–∞—Ç")
        print("/chats              - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ —á–∞—Ç—ã")
        print("/history [chat_id]  - –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞")
        print("/current            - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç")
        print("/colors             - –ø–æ–∫–∞–∑–∞—Ç—å —Ü–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print()
        print("üí¨ –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:")
        print("/help               - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
        print("/exit               - –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞")
        print("/home               - –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        print("/refresh            - –æ–±–Ω–æ–≤–∏—Ç—å —á–∞—Ç—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("/clear              - –æ—á–∏—Å—Ç–∏—Ç—å —ç–∫—Ä–∞–Ω")
        print("/notifications      - –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        print("/status             - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        print("="*80)
        print("üí¨ –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç")
        print("   (—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç)")
        print("="*80)
    
    def show_status(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"""
        print("\n" + "="*80)
        print("üìä –°–¢–ê–¢–£–° –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:")
        print("="*80)
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {self.nickname}")
        print(f"üåê –°–µ—Ä–≤–µ—Ä: {self.server_address}")
        if self.current_chat_id:
            chat_name = self.chat_names.get(self.current_chat_id, self.current_chat_id)
            print(f"üìç –¢–µ–∫—É—â–∏–π —á–∞—Ç: {chat_name} ({self.current_chat_id})")
        else:
            print(f"üìç –¢–µ–∫—É—â–∏–π —á–∞—Ç: –Ω–µ –≤—ã–±—Ä–∞–Ω")
        print(f"üè† –í–∞—à–∏—Ö —á–∞—Ç–æ–≤: {len(self.user_chats)}")
        print(f"üì® –û–±—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(self.messages)}")
        print(f"üìä –°–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º:")
        for chat_id, chat_stats in self.user_chats.items():
            chat_name = self.chat_names.get(chat_id, chat_id)
            count = len(self.room_messages.get(chat_id, []))
            new_msgs = chat_stats.new_messages
            new_indicator = f" ({new_msgs} –Ω–æ–≤—ã—Ö)" if new_msgs > 0 else ""
            print(f"   ‚Ä¢ {chat_name} ({chat_id}): {count} —Å–æ–æ–±—â–µ–Ω–∏–π{new_indicator}")
        print(f"üîÑ –°—Ç–∞—Ç—É—Å: {'–ø–æ–¥–∫–ª—é—á–µ–Ω' if self.channel else '–æ—Ç–∫–ª—é—á–µ–Ω'}")
        print("="*80)
    
    def process_command(self, command):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥"""
        command = command.strip()
        
        if not command:
            return
        
        # –ö–æ–º–∞–Ω–¥—ã —á–∞—Ç–æ–≤
        if command.startswith("/join "):
            parts = command.split(" ", 1)
            if len(parts) >= 2:
                chat_id = parts[1].strip()
                # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –≤—Å—Ç—É–ø–∏—Ç—å –≤ —á–∞—Ç
                if self.join_chat(chat_id):
                    # –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç—É–ø–∏–ª–∏, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —á–∞—Ç
                    if self.switch_chat(chat_id):
                        self.display_messages()
                else:
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç—É–ø–∏—Ç—å, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —á–∞—Ç–µ
                    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è
                    if chat_id in self.user_chats:
                        if self.switch_chat(chat_id):
                            self.display_messages()
                    else:
                        self.add_notification(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ —á–∞—Ç {chat_id}")
            else:
                self.add_notification("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /join <chat_id>")
            return
            
        elif command.startswith("/create "):
            parts = command.split(" ", 1)
            if len(parts) >= 2:
                chat_name = parts[1].strip()
                chat_id = self.create_chat(chat_name)
                if chat_id:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
                    self.get_user_chats()
                    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á–∞—Ç
                    self.switch_chat(chat_id)
                    self.display_messages()
            else:
                self.add_notification("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /create <–Ω–∞–∑–≤–∞–Ω–∏–µ>")
            return
            
        elif command.startswith("/leave "):
            parts = command.split(" ", 1)
            if len(parts) >= 2:
                chat_id = parts[1].strip()
                if self.leave_chat(chat_id):
                    # –ï—Å–ª–∏ –ø–æ–∫–∏–¥–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Ç, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Ç
                    if chat_id == self.current_chat_id:
                        self.current_chat_id = None
                    self.display_messages()
            else:
                self.add_notification("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /leave <chat_id>")
            return
            
        elif command == "/chats":
            print("\n" + "="*60)
            print("üè† –í–ê–®–ò –ß–ê–¢–´:")
            print("="*60)
            if not self.user_chats:
                print("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–∞—Ç–æ–≤")
            else:
                for chat_id, chat_stats in self.user_chats.items():
                    chat_name = self.chat_names.get(chat_id, chat_id)
                    count = len(self.room_messages.get(chat_id, []))
                    new_msgs = chat_stats.new_messages
                    current = " ‚Üê —Ç–µ–∫—É—â–∏–π" if chat_id == self.current_chat_id else ""
                    new_indicator = f" ({new_msgs} –Ω–æ–≤—ã—Ö)" if new_msgs > 0 else ""
                    print(f"‚Ä¢ {chat_name} ({chat_id}): {count} —Å–æ–æ–±—â–µ–Ω–∏–π{new_indicator}{current}")
            print("="*60)
            return
            
        elif command.startswith("/history "):
            parts = command.split(" ", 1)
            if len(parts) >= 2:
                chat_id = parts[1].strip()
            else:
                chat_id = self.current_chat_id
                
            if not chat_id:
                self.add_notification("‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω —á–∞—Ç")
                return
                
            history = self.get_chat_history(chat_id)
            chat_name = self.chat_names.get(chat_id, chat_id)
            print(f"\nüìú –ò–°–¢–û–†–ò–Ø –ß–ê–¢–ê '{chat_name}' ({chat_id}):")
            print("="*70)
            if not history:
                print("üì≠ –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç")
            else:
                for message_data in history:
                    if len(message_data) >= 3:
                        message, msg_type, nickname = message_data
                    else:
                        message, msg_type = message_data
                        nickname = None
                    
                    if msg_type == "received" and nickname:
                        user_color = self.get_user_color(nickname)
                        print(f"\033[{user_color}m{message}\033[0m")
                    elif msg_type == "sent" and nickname:
                        user_color = self.get_user_color(nickname)
                        print(f"\033[{user_color};2m{message}\033[0m")  # –¢—É—Å–∫–ª—ã–π —Ü–≤–µ—Ç
                    elif msg_type == "error":
                        print(f"\033[91m{message}\033[0m")
                    else:
                        print(message)
            print("="*70)
            return
            
        elif command == "/current":
            if self.current_chat_id:
                chat_name = self.chat_names.get(self.current_chat_id, self.current_chat_id)
                print(f"\nüìç –¢–µ–∫—É—â–∏–π —á–∞—Ç: \033[93m{chat_name}\033[0m ({self.current_chat_id})")
                count = len(self.room_messages.get(self.current_chat_id, []))
                print(f"üìä –°–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ: {count}")
            else:
                print("\nüìç –¢–µ–∫—É—â–∏–π —á–∞—Ç: –Ω–µ –≤—ã–±—Ä–∞–Ω")
            return
            
        elif command == "/colors":
            print("\nüé® –¶–í–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:")
            print("="*50)
            if self.user_colors:
                for nickname, color_code in self.user_colors.items():
                    print(f"‚Ä¢ {nickname}: \033[{color_code}m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\033[0m")
            else:
                print("üì≠ –ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏")
            print("="*50)
            return
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        elif command == "/exit":
            self.running = False
        elif command == "/help":
            self.show_help()
            return
        elif command == "/home":
            self.current_chat_id = None
            self.add_notification("üè† –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            self.display_messages()
            return
        elif command == "/refresh":
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –∏ –∏—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            self.get_user_chats()
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            if self.current_chat_id:
                self.get_chat_messages(self.current_chat_id)
            self.display_messages()
            return
        elif command == "/clear":
            # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
            if self.current_chat_id and self.current_chat_id in self.room_messages:
                self.room_messages[self.current_chat_id].clear()
            self.display_messages()
            return
        elif command == "/notifications":
            self.notifications.clear()
            self.add_notification("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã")
            return
        elif command == "/status":
            self.show_status()
            return
        else:
            # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
            self.send_message(command, self.current_chat_id)
    
    def message_polling_thread(self):
        """–ü–æ—Ç–æ–∫ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        while self.running:
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–æ–≤
                self.get_user_chats()
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
                if self.current_chat_id:
                    self.get_chat_messages(self.current_chat_id)
                time.sleep(1)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
            except Exception as e:
                self.add_notification(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ—Ç–æ–∫–µ –æ–ø—Ä–æ—Å–∞: {e}")
                time.sleep(5)
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.running = True
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        polling_thread = threading.Thread(target=self.message_polling_thread, daemon=True)
        polling_thread.start()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        self.get_user_chats()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ü–≤–µ—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.get_user_color(self.nickname)
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.add_notification(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π —á–∞—Ç, {self.nickname}!")
        self.add_notification("–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏")
        
        # –ù–∞—á–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        self.display_messages()
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        while self.running:
            try:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —á–∞—Ç–∞
                if self.current_chat_id:
                    chat_name = self.chat_names.get(self.current_chat_id, self.current_chat_id)
                    user_input = input(f"\n{self.nickname}@{chat_name}: ")
                else:
                    user_input = input(f"\n{self.nickname}: ")
                
                self.process_command(user_input)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                # –ö–æ–º–∞–Ω–¥—ã /help, /status, /chats, /history, /current, /notifications, /home, /colors –Ω–µ –æ–±–Ω–æ–≤–ª—è—é—Ç —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                no_update_commands = ["/help", "/status", "/chats", "/history", "/current", "/notifications", "/home", "/colors"]
                if self.running and not any(user_input.strip().startswith(cmd) for cmd in no_update_commands):
                    self.display_messages()
                
            except KeyboardInterrupt:
                print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ —á–∞—Ç–∞...")
                self.running = False
            except EOFError:
                print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ —á–∞—Ç–∞...")
                self.running = False
            except Exception as e:
                self.add_notification(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        self.disconnect()


def main():
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python simple_console_chat.py <server_address>")
        print("–ü—Ä–∏–º–µ—Ä: python simple_console_chat.py localhost:8080")
        sys.exit(1)
    
    server_address = sys.argv[1]
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    nickname = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è: ").strip()
    if not nickname:
        print("‚ùå –ù–∏–∫–Ω–µ–π–º –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —á–∞—Ç
    chat = SimpleConsoleChat(server_address)
    chat.nickname = nickname
    
    if not chat.connect():
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É {server_address}")
        sys.exit(1)
    
    try:
        chat.run()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")


if __name__ == "__main__":
    main()
