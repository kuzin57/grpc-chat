#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π gRPC –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ Messenger —Å–µ—Ä–≤–∏—Å–∞
"""

import grpc
import sys
import time
from generated import messenger_pb2
from generated import messenger_pb2_grpc


class MessengerClient:
    def __init__(self, server_address='localhost:8080'):
        self.server_address = server_address
        self.channel = None
        self.stub = None

    def connect(self):
        try:
            self.channel = grpc.insecure_channel(self.server_address)
            self.stub = messenger_pb2_grpc.MessengerStub(self.channel)
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É {self.server_address}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return False

    def disconnect(self):
        if self.channel:
            self.channel.close()
            print("üîå –û—Ç–∫–ª—é—á–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")

    def send_message(self, message, from_nickname, to_nickname):
        try:
            request = messenger_pb2.SendMessageRequest(
                message=message,
                from_nickname=from_nickname,
                to_nickname=to_nickname
            )
            
            response = self.stub.SendMessage(request)
            print(f"üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {response.message_id}")
            return response.message_id
        except grpc.RpcError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return None

    def get_received_messages(self, nickname):
        try:
            request = messenger_pb2.GetReceivedMessagesRequest(nickname=nickname)
            response = self.stub.GetReceivedMessages(request)
            
            print(f"üì• –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è {nickname}:")
            if not response.messages:
                print("  (–Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π)")
            else:
                for msg in response.messages:
                    print(f"  üì® {msg.from_nickname} -> {msg.to_nickname}: {msg.content}")
                    print(f"      ID: {msg.id}, –í—Ä–µ–º—è: {msg.created_at}")
            return response.messages
        except grpc.RpcError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
            return []

    def get_sent_messages(self, nickname):
        try:
            request = messenger_pb2.GetSentMessagesRequest(nickname=nickname)
            response = self.stub.GetSentMessages(request)
            
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {nickname}:")
            if not response.messages:
                print("  (–Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π)")
            else:
                for msg in response.messages:
                    print(f"  üì® {msg.from_nickname} -> {msg.to_nickname}: {msg.content}")
                    print(f"      ID: {msg.id}, –í—Ä–µ–º—è: {msg.created_at}")
            return response.messages
        except grpc.RpcError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
            return []


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python simple_client.py <server_address>")
        print("–ü—Ä–∏–º–µ—Ä: python simple_client.py localhost:8080")
        sys.exit(1)

    server_address = sys.argv[1]
    client = MessengerClient(server_address)

    if not client.connect():
        sys.exit(1)

    try:
        print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ gRPC Messenger –∫–ª–∏–µ–Ω—Ç–∞ ===\n")

        # –¢–µ—Å—Ç 1: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        print("1. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        client.send_message("–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏—Å–∞!", "–ë–æ–±", "–ê–ª–∏—Å–∞")
        client.send_message("–ü—Ä–∏–≤–µ—Ç, –ë–æ–±!", "–ê–ª–∏—Å–∞", "–ë–æ–±")
        client.send_message("–ö–∞–∫ –¥–µ–ª–∞?", "–ë–æ–±", "–ê–ª–∏—Å–∞")

        time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞

        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ê–ª–∏—Å—ã
        print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ê–ª–∏—Å—ã...")
        client.get_received_messages("–ê–ª–∏—Å–∞")

        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ë–æ–±–∞
        print("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ë–æ–±–∞...")
        client.get_received_messages("–ë–æ–±")

        # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ê–ª–∏—Å—ã
        print("\n4. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ê–ª–∏—Å—ã...")
        client.get_sent_messages("–ê–ª–∏—Å–∞")

        # –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ë–æ–±–∞
        print("\n5. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ë–æ–±–∞...")
        client.get_sent_messages("–ë–æ–±")

        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        client.disconnect()


if __name__ == "__main__":
    main()
