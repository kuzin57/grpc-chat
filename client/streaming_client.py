#!/usr/bin/env python3
"""
gRPC –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è streaming –º–µ—Ç–æ–¥–æ–≤ Messenger —Å–µ—Ä–≤–∏—Å–∞
"""

import grpc
import sys
import time
import threading
from generated import messenger_pb2
from generated import messenger_pb2_grpc


class StreamingMessengerClient:
    def __init__(self, server_address='localhost:8080'):
        self.server_address = server_address
        self.channel = None
        self.stub = None
        self.nickname = None

    def connect(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É"""
        try:
            self.channel = grpc.insecure_channel(self.server_address)
            self.stub = messenger_pb2_grpc.MessengerStub(self.channel)
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É {self.server_address}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return False

    def disconnect(self):
        """–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"""
        if self.channel:
            self.channel.close()
            print("üîå –û—Ç–∫–ª—é—á–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")

    def stream_received_messages(self, nickname):
        """Server-Side Streaming: –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
        try:
            request = messenger_pb2.StreamReceivedMessagesRequest(nickname=nickname)
            print(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ—Ç–æ–∫–æ–≤–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è {nickname}...")
            
            for message in self.stub.StreamReceivedMessages(request):
                print(f"üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.from_nickname} -> {message.to_nickname}")
                print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {message.content}")
                print(f"   ID: {message.id}, –í—Ä–µ–º—è: {message.created_at}")
                print("-" * 50)
                
        except grpc.RpcError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        except KeyboardInterrupt:
            print(f"\n‚èπÔ∏è  –ü–æ—Ç–æ–∫–æ–≤–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è {nickname} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    def chat_stream(self, nickname):
        """Bidirectional Streaming: —á–∞—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
        try:
            print(f"üí¨ –ù–∞—á–∏–Ω–∞–µ–º —á–∞—Ç-–ø–æ—Ç–æ–∫ –¥–ª—è {nickname}...")
            print("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏–ª–∏ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
            
            def send_messages():
                """–ü–æ—Ç–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
                while True:
                    try:
                        message_text = input()
                        if message_text.lower() == 'quit':
                            break
                        
                        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞
                        chat_message = messenger_pb2.ChatMessage(
                            content=message_text,
                            from_nickname=nickname,
                            to_nickname="all",  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º
                            type=messenger_pb2.ChatMessageType.MESSAGE
                        )
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        yield chat_message
                        
                    except EOFError:
                        break
                    except KeyboardInterrupt:
                        break

            def receive_messages():
                """–ü–æ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
                try:
                    for chat_message in self.stub.ChatStream(send_messages()):
                        if chat_message.type == messenger_pb2.ChatMessageType.MESSAGE:
                            print(f"üí¨ {chat_message.from_nickname}: {chat_message.content}")
                        elif chat_message.type == messenger_pb2.ChatMessageType.USER_JOINED:
                            print(f"üëã {chat_message.content}")
                        elif chat_message.type == messenger_pb2.ChatMessageType.USER_LEFT:
                            print(f"üëã {chat_message.content}")
                        elif chat_message.type == messenger_pb2.ChatMessageType.TYPING:
                            print(f"‚å®Ô∏è  {chat_message.from_nickname} –ø–µ—á–∞—Ç–∞–µ—Ç...")
                        elif chat_message.type == messenger_pb2.ChatMessageType.STOP_TYPING:
                            print(f"‚å®Ô∏è  {chat_message.from_nickname} –ø–µ—Ä–µ—Å—Ç–∞–ª –ø–µ—á–∞—Ç–∞—Ç—å")
                            
                except grpc.RpcError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞: {e}")
                except KeyboardInterrupt:
                    print(f"\n‚èπÔ∏è  –ß–∞—Ç-–ø–æ—Ç–æ–∫ –¥–ª—è {nickname} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
            receive_thread = threading.Thread(target=receive_messages)
            receive_thread.daemon = True
            receive_thread.start()
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
            receive_thread.join()
            
        except grpc.RpcError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á–∞—Ç-–ø–æ—Ç–æ–∫–∞: {e}")
        except KeyboardInterrupt:
            print(f"\n‚èπÔ∏è  –ß–∞—Ç-–ø–æ—Ç–æ–∫ –¥–ª—è {nickname} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    def send_typing_status(self, nickname, is_typing=True):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–µ—á–∞—Ç–∏"""
        try:
            message_type = messenger_pb2.ChatMessageType.TYPING if is_typing else messenger_pb2.ChatMessageType.STOP_TYPING
            
            chat_message = messenger_pb2.ChatMessage(
                from_nickname=nickname,
                to_nickname="all",
                type=message_type
            )
            
            # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π SendMessage
            # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–µ—Ä–µ–∑ ChatStream
            print(f"‚å®Ô∏è  –°—Ç–∞—Ç—É—Å –ø–µ—á–∞—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {'–ø–µ—á–∞—Ç–∞–µ—Ç' if is_typing else '–ø–µ—Ä–µ—Å—Ç–∞–ª –ø–µ—á–∞—Ç–∞—Ç—å'}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–µ—á–∞—Ç–∏: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ streaming –∫–ª–∏–µ–Ω—Ç–∞"""
    if len(sys.argv) < 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python streaming_client.py <server_address> <nickname> [mode]")
        print("–†–µ–∂–∏–º—ã:")
        print("  stream  - Server-Side Streaming (–ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π)")
        print("  chat    - Bidirectional Streaming (—á–∞—Ç)")
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python streaming_client.py localhost:8080 –ê–ª–∏—Å–∞ stream")
        print("  python streaming_client.py localhost:8080 –ë–æ–± chat")
        sys.exit(1)

    server_address = sys.argv[1]
    nickname = sys.argv[2]
    mode = sys.argv[3] if len(sys.argv) > 3 else "chat"

    client = StreamingMessengerClient(server_address)
    client.nickname = nickname

    if not client.connect():
        sys.exit(1)

    try:
        print(f"\n=== Streaming gRPC –∫–ª–∏–µ–Ω—Ç –¥–ª—è {nickname} ===\n")

        if mode == "stream":
            print("üîÑ –†–µ–∂–∏–º: Server-Side Streaming")
            print("–û–∂–∏–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
            client.stream_received_messages(nickname)
            
        elif mode == "chat":
            print("üí¨ –†–µ–∂–∏–º: Bidirectional Streaming (–ß–∞—Ç)")
            print("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç...")
            client.chat_stream(nickname)
            
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: {mode}")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: stream, chat")
            sys.exit(1)

    except KeyboardInterrupt:
        print(f"\n\n‚èπÔ∏è  –ö–ª–∏–µ–Ω—Ç {nickname} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        client.disconnect()


if __name__ == "__main__":
    main()
